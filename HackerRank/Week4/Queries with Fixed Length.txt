#include <stdio.h>

int slidingWindowMinOfMax(int arr[], int n, int d) {
    int deque[100000];   /* store indices */
    int front = 0, back = -1;
    int min_of_max = 2147483647; /* use max int instead of __INT_MAX__ */

    for (int i = 0; i < n; i++) {
        /* remove elements not in current window */
        while (front <= back && deque[front] <= i - d) {
            front++;
        }

        /* remove smaller elements (they will never be max) */
        while (front <= back && arr[deque[back]] <= arr[i]) {
            back--;
        }

        deque[++back] = i;

        /* window of size d is ready */
        if (i >= d - 1) {
            int current_max = arr[deque[front]];
            if (current_max < min_of_max) {
                min_of_max = current_max;
            }
        }
    }
    return min_of_max;
}

int main() {
    int n, q;
    scanf("%d %d", &n, &q);

    int arr[100000];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    while (q--) {
        int d;
        scanf("%d", &d);
        int ans = slidingWindowMinOfMax(arr, n, d);
        printf("%d\n", ans);
    }

    return 0;
}
